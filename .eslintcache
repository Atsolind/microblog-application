[{"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\index.js":"1","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\reportWebVitals.js":"2","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\App.js":"3","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\post-list.component.js":"4","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\navbar.component.js":"5","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\create-user.component.js":"6","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\front-page.component.js":"7"},{"size":298,"mtime":1608401660465,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1078,"mtime":1608388226288,"results":"11","hashOfConfig":"9"},{"size":6269,"mtime":1608378915039,"results":"12","hashOfConfig":"9"},{"size":1072,"mtime":1608374154741,"results":"13","hashOfConfig":"9"},{"size":3599,"mtime":1608403687619,"results":"14","hashOfConfig":"9"},{"size":2047,"mtime":1608382248777,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1krhir4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\index.js",[],["34","35"],"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\reportWebVitals.js",[],["36","37"],"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\App.js",[],"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\post-list.component.js",["38","39"],"import React, { Component, useDebugValue } from 'react';\r\nimport axios from 'axios'; //Importing axios to be able to add posts to database\r\n\r\n//Building a constructor for the class\r\nexport default class CreatePosts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Binding methods to refer to the class\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeContent = this.onChangeContent.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        //Starting state of the component and setting properties\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            content:'',\r\n            usernames: [],\r\n            users: []\r\n        }\r\n    }\r\n\r\n    //Method will be called right before anything is displayed in the browser\r\n    //Get request gets the route from the users route file and gets user data from the database\r\n    componentDidMount(){\r\n        //Gets usernames from database and displayes them in the dropdown menu\r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n            if (response.data.length > 0){\r\n                this.setState({\r\n                    usernames: response.data.map(user => user.username),\r\n                    username: response.data [0].username\r\n                })\r\n            }\r\n        })\r\n        //Gets usernames and passwords from the database to check if user inputs are correct\r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n            if (response.data.length > 0){\r\n                this.setState({\r\n                    users: response.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //Updates the username property, \r\n    //target being the textbox and value being the value of the textbox\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    //Updates the password property\r\n    onChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    //Updates the content property\r\n    onChangeContent(e){\r\n        this.setState({\r\n            content: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //Adding post to mongoDb database when pressing submit\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //Building a contructor for the posts\r\n        const post = {\r\n            username: this.state.username,\r\n            content: this.state.content\r\n        }\r\n        //If the users credentials match the on in database, the post will be added to the database\r\n        this.state.users.forEach(element => {\r\n            if (element.password ===  this.state.password && element.username === this.state.username){\r\n                console.log(post);\r\n                \r\n                axios.post('http://localhost:5000/posts/add', post)\r\n                .then(res => console.log(res.data));\r\n                window.location = '/'; //Takes user to the frontpage\r\n            } else {\r\n                console.log('The post was unable to be added'); //Console logs error if password wrong or content too big\r\n            }\r\n        })\r\n        //Setting the state back to empty after user has submitted post\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            content: ''\r\n        })\r\n    }\r\n\r\n    //Creating the component form code and rendering the create posts component\r\n    //Select option gets usernames from the usernames array\r\n    //For each user in the array the select box will give an option\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Select your Username and create a Post!</h4>\r\n                <div className=\"jumbotron\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>\r\n                                <strong>Username:</strong> \r\n                            </label>\r\n                            <select ref=\"userInput\"\r\n                            required\r\n                            readonly\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChangeUsername}>\r\n                                {\r\n                                    this.state.usernames.map(function(user) {\r\n                                        return <option\r\n                                        key={user}\r\n                                        value={user}>{user}\r\n                                        </option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>\r\n                                <strong>Password:</strong> \r\n                            </label>\r\n                            <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>\r\n                                <strong>Content: </strong>\r\n                                <weak>(Max 300 characters)</weak>\r\n                            </label>\r\n                            <textarea type=\"text\"\r\n                            rows=\"3\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.content}\r\n                            onChange={this.onChangeContent}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value=\"Submit Post\" className=\"btn btn-dark\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\navbar.component.js",[],"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\create-user.component.js",[],"C:\\Users\\Atsolind\\Desktop\\WebApplicationsProject\\microblog-application\\src\\components\\front-page.component.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":28,"nodeType":"50","messageId":"51","endLine":1,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":34,"column":31,"nodeType":"54","messageId":"55","endLine":34,"endColumn":48,"fix":"56"},{"ruleId":"42","replacedBy":"57"},{"ruleId":"44","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"no-unused-vars","'useDebugValue' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression","unexpectedWhitespace",{"range":"61","text":"62"},["59"],["60"],"no-global-assign","no-unsafe-negation",[1384,1385],""]